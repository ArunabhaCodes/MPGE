log(55)
log(55)^2
devtools::load_all()
?sst
?weighted_multiple_hypothesis_testing
?weighted_multiple_hypothesis_testing
devtools::document()
?weighted_multiple_hypothesis_testing
devtools::load_all()
devtools::load_all()
usethis::use_vignette("my-vignette")
install.packages("rmarkdown")
usethis::use_vignette("my-vignette")
usethis::use_vignette("mpge")
x <- data.frame(a=sample(10), b=rep('a',10), c=sample(10))
xlistBycol <- as.list(x)
xlistBycol
:q
q(0)
q()
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P_base.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/sst.R")
# first, read the sample data and test for multivar G and GxE
inpath <- "~/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
Gfile <- paste0(inpath, "genotype_data.gz")
Efile <- paste0(inpath, "environment_data.gz")
PHfile <- paste0(inpath, "phenotype_data.gz")
geno <- as.matrix(read.table(Gfile, header = T, stringsAsFactors = F))
env <- as.matrix(read.table(Efile, header = T, stringsAsFactors = F))
pheno <- as.matrix(read.table(PHfile, header = T, stringsAsFactors = F))
mul_geno <- list()
mul_geno[["snp1"]] <- geno
REP <- 10
for(i in 2:REP)
mul_geno[[paste0("snp", i)]] <- sample(geno, size = length(geno))
library("purrr")
system.time(DD <- mul_geno %>% map(function(x) mv_G_GE(pheno, x, env)))
system.time(DD <- mul_geno %>% map(function(x) mv_G_GE_base(pheno, x, env)))
DD
AA <- names(DD)
AA[1:2]
BB <- DD[[AA]][["mvG.P"]]
BB <- DD[[AA][["mvG.P"]]
BB <- DD[AA][["mvG.P"]]
BB
DD[AA]
AA <- as.data.frame(DD)
dim(AA)
AA
BB <- AA[, grep(".mvG.P", colnames(AA))]
BB
colnames(BB) <- gsub(".mvG.P", colnames(BB))
colnames(BB) <- gsub(".mvG.P", "", colnames(BB))
BB
SS <- data.frame(DD)
SS
FF <- map(mul_geno, function(x) mv_G_GE_base(pheno, x, env))
FF
mul_geno <- list()
mul_geno[["snp1"]] <- geno
REP <- 1000
for(i in 2:REP)
mul_geno[[paste0("snp", i)]] <- sample(geno, size = length(geno))
system.time(DD <- mul_geno %>% map(function(x) mv_G_GE_base(pheno, x, env)))
system.time(FF <- map(mul_geno, function(x) mv_G_GE_base(pheno, x, env)))
DD[[1]]
FF[[1]]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P_base.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/sst.R")
# first, read the sample data and test for multivar G and GxE
inpath <- "~/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
Gfile <- paste0(inpath, "genotype_data.gz")
Efile <- paste0(inpath, "environment_data.gz")
PHfile <- paste0(inpath, "phenotype_data.gz")
geno <- as.matrix(read.table(Gfile, header = T, stringsAsFactors = F))
env <- as.matrix(read.table(Efile, header = T, stringsAsFactors = F))
pheno <- as.matrix(read.table(PHfile, header = T, stringsAsFactors = F))
mul_geno <- data.frame(snp1 = geno)
REP <- 1000
for(i in 2:REP)
mul_geno[,paste0("snp", i)] <- sample(geno, size = length(geno))
res <- mv_G_GE_base(pheno, mul_geno, as.factor(env))
res <- mv_G_GE(pheno, mul_geno, as.factor(env))
res <- mv_G_GE(pheno, mul_geno, env)
length(res)
res[["mvG.P"]][1:10]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P.R")
res <- mv_G_GE(pheno, mul_geno, env)
dim(res)
res[1:10,]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P.R")
res <- mv_G_GE(pheno, mul_geno, env)
res[1:10,]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
res.whmt <- WHT(res)
res.whmt
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
res.whmt <- WHT(res)
nrow(res.whmt)
str(res.whmt)
dim(res.whmt)
res.whmt
res.whmt[1:10,]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
res.whmt <- WHT(res)
res.whmt[[1]]
res.whmt[[2]][1:10,]
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/mv_G_GE_P.R")
source("~/Dropbox/Rpackages/workingPackage/GeneEnvironment/MPGE/R/whmt.R")
res.whmt <- WHT(res)
res.whmt[[1]]
# apply weighted hypothesis multiple testing
res.whmt <- WHT(data.frame(G.P=Pg, GE.P=Pge, SNP = snp_set))  # first_bin_size, snp_set, FWER
Pg.file <- paste0(inpath, "multivariate_G_pv.gz")
Pge.file <- paste0(inpath, "multivariate_GE_pv.gz")
Pg <- as.matrix(read.table(Pg.file, header = T, stringsAsFactors = F))
Pge <- as.matrix(read.table(Pge.file, header = T, stringsAsFactors = F))
m <- nrow(Pg)                     ## number of SNPs.
snp_set <- paste0("SNP", 1:m)     ## set of SNPs.
first_bin_size <- 5
FWER <- 0.05
# apply weighted hypothesis multiple testing
res.whmt <- WHT(data.frame(G.P=Pg, GE.P=Pge, SNP = snp_set))  # first_bin_size, snp_set, FWER
Pg[1:2,]
# apply weighted hypothesis multiple testing
res.whmt <- WHT(data.frame(G.P=Pg[,1], GE.P=Pge[,1], SNP = snp_set))  # first_bin_size, snp_set, FWER
res.whmt[[1]]
res.whmt[[2]][1:10,]
devtools::load_all()
duplicated(c(1:4, 3))
any(duplicated(c(1:4, 3)))
1:3 %in% c(1:4, 3)
1:7 %in% c(1:4, 3)
all(1:7 %in% c(1:4, 3))
AA <- c(1:4, 3)
any(AA > 0)
any(AA > 10)
any(AA > 10 | AA < 2)
x <- 1.2
x == floor(x)
x <- 1.5
x == floor(x)
x <- 1.8
x == floor(x)
inDir <- "/Users/arunmacpro13/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
environment_data <- read.table(paste0(inDir, "environment_data.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
environment_data[1:10,]
devtools::use_data(environment_data)
usethis::use_data(environment_data, compress = "bzip2")
genotype_data <- read.table(paste0(inDir, "genotype_data.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
usethis::use_data(genotype_data, compress = "bzip2")
#usethis::use_data(genotype_data, compress = "bzip2")
phenotype_data <- read.table(paste0(inDir, "phenotype_data.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
usethis::use_data(phenotype_data, compress = "bzip2")
str(phenotype_data)
devtools::load_all()
str(phenotype_data)
phenotype_data[1:10,]
#usethis::use_data(phenotype_data, compress = "bzip2")
multivariate_G_pv <- read.table(paste0(inDir, "multivariate_G_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
inDir <- "/Users/arunmacpro13/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
multivariate_G_pv <- read.table(paste0(inDir, "multivariate_G_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
usethis::use_data(multivariate_G_pv, compress = "bzip2")
multivariate_GE_pv <- read.table(paste0(inDir, "multivariate_GE_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
usethis::use_data(multivariate_GE_pv, compress = "bzip2")
devtools::load_all()
AA <- mv_G_GE(phenotype_data, genotype_data, environment_data)
is.data.frame(phenotype_data)
?mv_G_GE
devtools::document()
?mv_G_GE
PHENO <- phenotype_data
AA <- mv_G_GE(PHENO, genotype_data, environment_data)
!is.numeric(PHENO)
PHENO[1:2,]
PHENO[1:2,1]
is.numeric(PHENO)
is.numeric(as.matrix(PHENO)
)
devtools::load_all()
AA <- mv_G_GE(PHENO, genotype_data, environment_data)
genotype_data[1:2,]
genotype_data <- read.table(paste0(inDir, "genotype_data.gz"), header = TRUE, stringsAsFactors = FALSE)
inDir <- "/Users/arunmacpro13/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
genotype_data <- read.table(paste0(inDir, "genotype_data.gz"), header = TRUE, stringsAsFactors = FALSE)
genotype_data[1:2,]
usethis::use_data(genotype_data, compress = "bzip2")
is.numeric(genotype_data)
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, environment_data)
environment_data[1:10,]
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, environment_data)
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, environment_data)
inDir <- "/Users/arunmacpro13/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
multivariate_G_pv <- read.table(paste0(inDir, "multivariate_G_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
multivariate_GE_pv <- read.table(paste0(inDir, "multivariate_GE_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
mv_G_GxE_pvalues <- data.frame(SNP = paste0("SNP", 1:nrow(multivariate_G_pv)), G.P = multivariate_G_pv[, 1], GE.P = multivariate_GE_pv[, 1], stringsAsFactors = FALSE)
#usethis::use_data(mv_G_GxE_pvalues, compress = "bzip2")
usethis::use_data(mv_G_GxE_pvalues, compress = "bzip2")
devtools::load_all()
devtools::document()
?whmt
?WHT
AA <- WHT(mv_G_GxE_pvalues)
dim(AA)
length(AA)
AA[[1]]
AA[[2]][1:10,]
length(AA[[2]])
genoList <- as.list(genotype_data[,1])
length(genoList)
genoList[1:2]
genoList <- as.list(as.data.frame(genotype_data[,1]))
length(genoList)
genoList[[1]][1:10]
pvalSNP <- purrr::map(genoList, function(x) mv_G_GE_base(phenotype_data, x, environment_data[,1]))
str(pvalSNP)
names(pvalSNP)
pvalSNP <- as.data.frame(pvalSNP)
pvalSNP[1:10,]
RESULTS <- data.frame(SNP = names(pvalSNP), stringsAsFactors = FALSE)
for(var in c("G.P", "GE.P")) {
tmp <- pvalSNP[, grep(var, colnames(pvalSNP))]
colnames(tmp) <- gsub(paste0(".", var), "", colnames(tmp))
RESULTS[ ,var] <- t(tmp[, RESULTS$SNP])
}
for(var in c("G.P", "GE.P")) {
tmp <- pvalSNP[, grep(var, colnames(pvalSNP)), drop = FALSE]
colnames(tmp) <- gsub(paste0(".", var), "", colnames(tmp))
RESULTS[ ,var] <- t(tmp[, RESULTS$SNP])
}
RESULTS
devtools::load_all()
AA <- mv_G_GE(phenotype_data, genotype_data, environment_data)
dim(AA)
AA
AA <- mv_G_GE(phenotype_data, genotype_data[,1], environment_data)
AA
AA <- mv_G_GE(phenotype_data, genotype_data[,1, drop = FALSE], environment_data)
AA
AA <- mv_G_GE(phenotype_data, as.matrix(genotype_data), environment_data)
AA
AA <- mv_G_GE(phenotype_data, as.matrix(genotype_data), environment_data[1:10])
AA <- mv_G_GE(phenotype_data, as.matrix(genotype_data), environment_data[1:10,1])
AA <- mv_G_GE(phenotype_data, genotype_data[1:10,1], environment_data)
AA <- mv_G_GE(phenotype_data, genotype_data[1:10,1, drop = FALSE], environment_data)
devtools::load_all()
usethis::use_testthat()
usethis::use_test(name = "mv_G_GE")
mv_G_GE(1:10, genotype_data, environment_data)
mv_G_GE(phenotype_data, genotype_data, environment_data)
devtools::test()
mv_G_GE(phenotype_data[,1], genotype_data, environment_data)
mv_G_GE(phenotype_data[,1, drop = FALSE], genotype_data, environment_data)
devtools::load_all()
mv_G_GE(phenotype_data[,1, drop = FALSE], genotype_data, environment_data)
devtools::load_all()
devtools::test()
mv_G_GE(phenotype_data[,1, drop = FALSE], genotype_data, environment_data)
mv_G_GE(data.frame(A = rep("A", nrow(genotype_data), B = 10), genotype_data, environment_data)
)
mv_G_GE(data.frame(A = rep("A", nrow(genotype_data)), B = 10), genotype_data, environment_data)
devtools::test()
mv_G_GE(phenotype_data, as.list(genotype_data), environment_data)
mv_G_GE(phenotype_data, list(rep(1, nrow(phenotype_data))), environment_data)
is.data.frame(list(rep(1, nrow(phenotype_data))))
geno <- list(rep(1, nrow(phenotype_data)))
!is.vector(geno) && !is.matrix(geno) && !is.data.frame(geno)
is.vector(geno)
length(geno)
devtools::load_all()
mv_G_GE(phenotype_data, list(rep(1, nrow(phenotype_data))), environment_data)
devtools::load_all()
devtools::test()
phenotype_data, as.list(genotype_data), environment_data)
mv_G_GE(phenotype_data, as.list(genotype_data), environment_data)
mv_G_GE(phenotype_data, as.character(genotype_data[,1]), environment_data)
devtools::test()
inDir <- "/Users/arunmacpro13/Dropbox/Rpackages/workingPackage/GeneEnvironment/sample_data/"
multivariate_G_pv <- read.table(paste0(inDir, "multivariate_G_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
multivariate_GE_pv <- read.table(paste0(inDir, "multivariate_GE_pv.gz"), header = TRUE, stringsAsFactors = FALSE, sep = "\t")
mv_G_GxE_pvalues <- data.frame(SNP = paste0("rs", 1:nrow(multivariate_G_pv)), G.P = multivariate_G_pv[, 1], GE.P = multivariate_GE_pv[, 1], stringsAsFactors = FALSE)
#usethis::use_data(mv_G_GxE_pvalues, compress = "bzip2")
usethis::use_data(mv_G_GxE_pvalues, compress = "bzip2")
mv_G_GxE_pvalues[1:10,]
mv_G_GE(phenotype_data, genotype_data, environment_data)
mv_G_GE(phenotype_data, genotype_data[,1], environment_data)
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data[,1], environment_data)
mv_G_GE(phenotype_data[1:10,], genotype_data, environment_data)
mv_G_GE(phenotype_data[1:10,1], genotype_data, environment_data)
mv_G_GE(phenotype_data, genotype_data[1:10,], environment_data)
mv_G_GE(phenotype_data, genotype_data[1:10, 1], environment_data)
AA <- list(environment_data[,1])
as.list(AA)
is.atomic(AA)
mv_G_GE(phenotype_data, genotype_data, as.list(environment_data[,1]))
mv_G_GE(phenotype_data, genotype_data, list(environment_data[,1]))
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, list(environment_data[,1]))
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, list(environment_data[,1]))
mv_G_GE(phenotype_data, genotype_data, as.list(environment_data))
devtools::load_all()
mv_G_GE(phenotype_data, genotype_data, data.frame(environment_data[,1], environment_data[,1]))
AA <- matrix(rep(environment_data[,1], 2), ncol = 2)
dim(AA)
dim(environment_data)
devtools::test()
(mv_G_GE(phenotype_data, genotype_data, environment_data[1:10,])
)
devtools::test()
mv_G_GE(phenotype_data, genotype_data[,1], environment_data)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
round(mv_G_GE(phenotype_data, genotype_data[,1], environment_data)$G.P, digits = 9)
devtools::test()
devtools::test()
mv_G_GE(phenotype_data, genotype_data, environment_data)
mv_G_GE(phenotype_data, genotype_data, environment_data)$G.P
mv_G_GE(phenotype_data, genotype_data, environment_data)$G.P[,1]
mv_G_GE(phenotype_data, genotype_data, environment_data)$G.P["rs1",1]
c("rs1" = 0.000151109)
mv_G_GE(phenotype_data, genotype_data, environment_data)$SNP
devtools::test()
mv_G_GE(phenotype_data, genotype_data, environment_data)$G.P
devtools::test()
mv_G_GE(phenotype_data, genotype_data, environment_data)$GE.P
devtools::test()
usethis::use_test("whmt")
WHT(1:10)
mv_G_GxE_pvalues[1:10,]
WHT(mv_G_GxE_pvalues[, 1:2])
WHT(mv_G_GxE_pvalues[, 2:3])
M <- nrow(mv_G_GxE_pvalues)
M
AA <- sample(c(TRUE, FALSE), M, replace = TRUE)
length(AA)
is.logical(AA)
AA <- mv_G_GxE_pvalues
M <- sample(c(TRUE, FALSE), nrow(AA), replace = TRUE)
BB <- data.frame(SNP = M, AA[, 2:3])
dim(BB)
BB[1:2,]
(WHT(data.frame(SNP = M, AA[, 2:3]))
)
WHT(data.frame(SNP = rep("a", nrow(AA)), AA[, 2:3]))
devtools::test()
WHT(data.frame(G.P = M, AA[, c(1, 3)]))
devtools::test()
devtools::test()
M <- sample(1:1000, nrow(AA), replace = FALSE)
WHT(data.frame(G.P = M, AA[, c(1, 3)]))
devtools::test()
WHT(data.frame(G.P = M, AA[, c(1, 2)]))
devtools::test()
AA <- mv_G_GxE_pvalues
M <- sample(-(1:nrow(AA)), nrow(AA), replace = FALSE)
M[1:10]
devtools::test()
WHT(mv_G_GxE_pvalues, first_bin_size = 0.05)
WHT(mv_G_GxE_pvalues, first_bin_size = "a")
devtools::load_all()
AA <- WHT(mv_G_GxE_pvalues, first_bin_size = 0.05)
devtools::test()
AA <- WHT(mv_G_GxE_pvalues, first_bin_size = -2)
devtools::load_all()
devtools::test()
devtools::test()
WHT(mv_G_GxE_pvalues, FWER = -1)
devtools::load_all()
devtools::test()
WHT(mv_G_GxE_pvalues, FWER = "p")
devtools::load_all()
devtools::test()
devtools::test()
devtools::test()
usethis::use_test(name = "sst")
devtools::test()
devtools::test()
devtools::load_all()
devtools::document()
?WHT
devtools::load_all()
usethis::use_package("car")
usethis::use_package("purrr")
usethis::use_package("stats")
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::test()
devtools::build()
devtools::load_all()
devtools::document()
devtools::build_vignettes()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::use_build_ignore("README.Rmd")
usethis::use_build_ignore("README.Rmd")
devtools::check()
devtools::build()
devtools::build_win(., version = c("R-release", "R-devel"))
usethis::use_travis()
devtools::check_win_devel()
devtools::check_win_release()
usethis::use_build_ignore("README.html")
devtools::load_all()
devtools::check()
devtools::build()
devtools::check_win_devel()
devtools::check_win_release()
usethis::use_build_ignore(".travis.yml")
usethis::use_build_ignore("cran-comments.md")
devtools::load_all()
devtools::document()
usethis::use_package("utils")
devtools::load_all()
usethis::use_build_ignore("NEWS.md")
devtools::load_all()
devtools::document()
usethis::use_package("utils")
devtools::load_all()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::check()
devtools::revdep()
devtools::check_win_devel()
devtools::check_win_release()
devtools::release()
install.packages("devtools")
devtools::load_all()
install.packages("car")
devtools::load_all()
devtools::document()
devtools::build_vignettes()
devtools::check()
install.packages("rmarkdown")
library("knitr")
library("testthat")
